"0","chain = ""IGH"""
"0","func <-  data.frame(allele = names(vgerms[[chain]]), functionality = !grepl(""(ORF|P)"",sapply(seqinr::getAnnot(vgerms_full[[chain]]), function(x) unlist(strsplit(x,""[|]""))[4])), sign = sapply(seqinr::getAnnot(vgerms_full[[chain]]), function(x) unlist(strsplit(x,""[|]""))[4]), stringsAsFactors = F)"
"0",""
"0","load(""data_frac_new2.rda"")"
"0","data <- setDT(data_frac$IGH$functional$nonsingle$all$`318`$complete$`95`)"
"0","data[,v_call:=paste0(v_gene,""*"",v_allele)]"
"0","load(""alleles_dbs.rda"")"
"0","allele_db <- alleles_dbs$IGH$functional$nonsingle$all$`318`$complete$`95`"
"0","allele_db <- allele_db %>% rowwise() %>% mutate(gene = getGene(or_allele, strip_d = F, omit_nl = F), group = strsplit(gsub(gene, """", new_allele),""[*]"")[[1]][1], gene_group = getGene(new_allele, strip_d = F, omit_nl = F))"
"0","load(""functional_groups.rda"")"
"0","func_groups <- functional_groups$IGH$functional$nonsingle$all$`318`$complete$`95`"
"0",""
"0","groups <- setNames(allele_db$gene_group, allele_db$or_allele)"
"0","func$group <- groups[func$allele]"
"0",""
"0","tmp_allele_db <- allele_db %>%"
"0","  dplyr::group_by(new_allele) %>% "
"0","  dplyr::summarise(or_allele = paste0(or_allele, collapse = ""/""))"
"0",""
"0","or_allele <- setNames(tmp_allele_db$or_allele, tmp_allele_db$new_allele)"
"0",""
"0",""
"0",""
"0","data_cluster <- data[, v_allele_axis := or_allele[v_call]]"
"0","data_cluster$group_plot <- ifelse(is.na(data_cluster$j_call), 1, 2)"
"0","data_cluster <- data_cluster[mut == 0 & group_plot == 1]"
"0","data_cluster <- data_cluster[, .(v_allele_axis = unlist(tstrsplit(v_allele_axis, ""/"", type.convert = FALSE))), by = setdiff(names(data_cluster), ""v_allele_axis"")]"
"0","data_cluster2 <- data_cluster %>% filter(v_gene %in% names(absolute_thresholds_dict)) %>% "
"0","  rowwise() %>% "
"0","  dplyr::mutate(thresh = unique(as.numeric(absolute_thresholds_dict[[v_gene]][gsub(""IGH"","""",v_allele_axis)])))"
"0","#data_cluster2 <- data_cluster2 %>% filter(freq2>=thresh)"
"0",""
"0","p_list <- list()"
"0","i = 1"
"0",""
"0","counts <- c()"
"0",""
"0","for(g_group in names(absolute_thresholds_dict)){"
"0","  n_alleles <- func %>% filter(group==g_group) "
"0","  if(nrow(n_alleles)==0) next()"
"0","  n_alleles <- n_alleles %>% rowwise() %>% mutate(allele_num = strsplit(allele, ""[*]"")[[1]][2]) %>% dplyr::arrange(allele_num)"
"0","  alleles <- n_alleles$allele"
"0","  "
"0","  threhsolds <- absolute_thresholds_dict[[g_group]]"
"0","  df <- data.frame(v_allele_axis2 = paste0(""IGH"", names(threhsolds)), thresh = threhsolds, freq2 = 0)"
"0","  data_cluster3 <- data_cluster2 %>% filter(v_gene==g_group)"
"0","  if(nrow(data_cluster3)==0) next()"
"0","  below_thresh <- data_cluster3 %>% filter(freq2<thresh) %>% dplyr::mutate(project = ""below thresh"","
"0","                                                                           zygousity_state = 0)"
"0","  above_thresh <- data_cluster3 %>% filter(freq2>=thresh) %>% dplyr::arrange(desc(freq2)) %>%"
"0","    dplyr::group_by(subject) %>% dplyr::mutate("
"0","      zygousity_state = dplyr::n()"
"0","    ) %>% arrange(subject)"
"0","  "
"0","  if(nrow(above_thresh)==0) next()"
"0","  "
"0","  "
"0","  data_cluster4 <- bind_rows(below_thresh, above_thresh)"
"0","  data_cluster4$v_allele_axis2 <- factor(data_cluster4$v_allele_axis, n_alleles$allele)"
"0","  data_cluster4$v_allele_axis3 <- as.numeric(data_cluster4$v_allele_axis2)"
"0","  "
"0","  "
"0","  dat <- data.frame(group = g_group, allele = ""IMGT"", v_allele_axis = alleles, alleles = 1, state = ""0"", novel = F, stringsAsFactors = F)"
"0","  "
"0","  dat2 <- above_thresh %>% group_by(v_allele_axis) %>% summarise(state = paste0(sort(unique(zygousity_state)), collapse = "",""), group = g_group, alleles = 1, allele = ""seen"") %>% ungroup() %>% dplyr::mutate(novel = grepl(""_"", v_allele_axis))"
"0","  counts <- bind_rows(counts, dat, dat2)"
"0","  "
"0","  # data_cluster4 <- data_cluster4 %>% dplyr::arrange(desc(freq2)) %>%"
"0","  #   dplyr::group_by(subject) %>% dplyr::mutate("
"0","  #     zygousity_state = dplyr::n()"
"0","  #   ) %>% arrange(subject)"
"0","  # "
"0","  "
"0","  p_list[[i]] <- ggplot() + geom_boxplot(data = data_cluster4, mapping = aes(v_allele_axis2, freq2) , outlier.shape = NA) + "
"0","    geom_point(data = data_cluster4, mapping = aes(v_allele_axis2, freq2, color = factor(zygousity_state), shape = project), size = 6, position=position_jitter(width = 0.1)) +"
"0","    geom_errorbar(data=df, aes(x = v_allele_axis2, ymin = thresh, ymax = thresh),"
"0","                  size=0.5,col=""red"", linetype = ""dashed"") +"
"0","    labs(x = """", y = ""Repertoire\nnormalized"", color = ""Zygousity"", shape = ""Project"", title = g_group) + "
"0","    theme_bw(base_size = 40) + theme(axis.text.x = element_text(angle = 45, hjust = 1))"
"0","  i = i +1"
"0","}"
"0",""
"0",""
"0",""
